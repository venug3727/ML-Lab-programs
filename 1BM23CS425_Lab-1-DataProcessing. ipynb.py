# -*- coding: utf-8 -*-
"""mllab1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u4aM1deWHXFcmkMNJ_mElJyV6vlrOMyR
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder
from sklearn.preprocessing import StandardScaler, MinMaxScaler
df= pd.read_csv("/content/Dataset of Diabetes .csv")
# print(df.head())


ordinal_encoder = OrdinalEncoder(categories=[["M", "F","f"]])
# Fit and transform the data
df["Gender_Encoded"] = ordinal_encoder.fit_transform(df[["Gender"]])
print(df["Gender_Encoded"])

print("1.info of all columns: \n",df.info())

print("2.statistical info of all columns: \n ",df.head().describe())

print(df["Gender"].value_counts())

missing=df.isnull().sum()
print(missing[missing > 0])

scaler = StandardScaler()
df[['AGE']] = scaler.fit_transform(df[['AGE']])
df.head()

normalizer = MinMaxScaler()
df[['Cr']] = normalizer.fit_transform(df[['Cr']])
df["Cr"].head()

from sklearn.preprocessing import StandardScaler, MinMaxScaler

df1=pd.read_csv("/content/adult.csv")

print(df1.head())

print("1.info of all columns: \n",df1.info())

print("2.statistical info of all columns: \n ",df1.head().describe())


print(df1["occupation"].value_counts())

missing=df1.isnull().sum()
print(missing[missing > 0])
print(df1.replace(to_replace='?', value=np.nan)
)
print(df1)

print("2.statistical info of all columns: \n ",df1.head().describe())

print(df1.replace(to_replace='?', value=np.nan)
)
print(df1["occupation"].value_counts())

missing=df1.isnull().sum()
print(missing[missing > 0])

df1['gender'] = df1['gender'].astype('category')
ordinal_encoder = OrdinalEncoder(categories=[["Male", "Female"]])

#df1["gender"] = ordinal_encoder.fit_transform(df1[["gender"]])
print(df1['gender'])
ordinal_encoder = OrdinalEncoder(categories=[["Male", "Female"]])

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from scipy import stats

scaler = StandardScaler()
df1[['age']] = scaler.fit_transform(df1[['age']])
df1.head()

normalizer = MinMaxScaler()
df1[['fnlwgt']] = normalizer.fit_transform(df1[['fnlwgt']])
df1["fnlwgt"].head()